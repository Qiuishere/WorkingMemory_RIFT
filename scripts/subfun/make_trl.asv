function trl = make_trl(subj_id)

subjects = datainfo();

cfg = [];
cfg.dataset = subjects(subj_id).rawmeg;
cfg.trialdef.eventtype = 'UPPT001';
cfg.trialdef.eventvalue = [31]; % delay onset
cfg.trialdef.prestim = 2;
cfg.trialdef.poststim = 4;
cfg = ft_definetrial(cfg);


Behav = load_behav(subj_id);

% % for debugging
% event = struct2table(cfg.event);
% a = zeros(1,size(event,1));
% for i = 1:size(event,1)
%     tmp1 = event.type(i);
%     tmp2 = event.value(i);
%     if strcmp(tmp1,'UPPT001')
%         a(i) = tmp2{1};
%     end
% end
% 
% nnz(a == 3)

% addpath ../../expscripts;

% The MEG recording will contain the practice trials as well, which we
% don't want. There might be different numbers of practice trials among
% recordings, so do a check here to make sure we read in the right trials,
% as defined by the behavioural log file. This is also a nice sanity check
% in general.

% compute the triggers that should have been sent based on the behavioural
% log file
% trigs_behav = arrayfun(@(x) MakeOnsetTrig(Behav, x), 1:Behav.num_tri_total);
% 
% % exclude recognition task
% trigs_behav = trigs_behav(trigs_behav <= 32);

ntri_meg = size(cfg.trl, 1);
ntri_behav = size(Behav, 1);
assert(ntri_meg >= ntri_behav);

% % find indices for which triggers overlap
% for offset = 0:1000
%     trigs_meg = cfg.trl((1+offset):(ntri_behav+offset),4);
%     if isequal(trigs_meg', trigs_behav)
%         fprintf('ignoring first %d trials in MEG\n', offset);
%         break;
%     end
% end
% if offset == 1000
%     error('could not determine best offset from MEG to behavioural triggers');
% end
% 
% trl = cfg.trl((1+offset):(ntri_behav+offset),:);

trl = cfg.trl;

% add trial indices to the end of the trl matrix, for easy indexing into
% the behavioural log later on (after rejecting trials etc.)

%trl(:,5) = 1:ntri_behav;
trl(:,5) = 1:size(trl,1);

end