% GENERAL SETTINGS for equipments: keyboard, monitor, log file

%% Clean up


AssertOpenGL;

%% Set random seed

[seed, whichGen] = ClockRandSeed;


%% Screen preferences

% Suppress non-critical tests and warnings      (TEST ELSEWHERE!)
Screen('Preference', 'VisualDebuglevel',    3);
Screen('Preference', 'SuppressAllWarnings', 1);

if RealRun
    Screen('Preference', 'SkipSyncTests',      0);
else
    Screen('Preference', 'SkipSyncTests',      1);
end


%% Keyboard

KbName('UnifyKeyNames')
% participant keys

Keys.name = {'UpArrow', 'DownArrow'};
Keys.number = [KbName('UpArrow') KbName('DownArrow')];
Keys.eyetrack = [KbName('Enter') KbName('C') KbName('V')];
RespKeys = Keys.number;
% restrict keys that are read out by KbCheck (speeds up KbCheck)
enabledKeys = [RespKeys Keys.eyetrack KbName('ESCAPE') KbName('SPACE') ];
RestrictKeysForKbCheck(enabledKeys);

%% Open screen & settings==================================================
sca;
AssertOpenGL;

text.Size = 24;
text.Color = prm.monitor.white;
text.Font = 'Arial';


prm.w = SetScreen('Window', prm.monitor.screenId,'OpenGL', 1, 'BGColor', 255* prm.monitor.grey, 'Blending', 'Transparent',...
    'Debug', 0,'FontSize',text.Size,'FontColor', text.Color, 'FontType',text.Font);

topPriorityLevel = MaxPriority(prm.w.Number);
Priority(topPriorityLevel);

if RealRun
    HideCursor(prm.monitor.screenId);
end



%%record the current script
ScriptName = {'Adjustment_withMask_RIFT','Settings_General_MEG', 'RUN'};
prm.myCode = cell(length(ScriptName),1);
for i = 1:length(ScriptName)
    fid = fopen([ScriptName{i} '.m'],'r'); % 'r': open file for reading
    prm.myCode{i} = fscanf(fid,'%300c');
    fclose('all');
end